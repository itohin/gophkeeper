// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/itohin/gophkeeper/internal/server/usecases/auth (interfaces: OTPGenerator)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOTPGenerator is a mock of OTPGenerator interface.
type MockOTPGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockOTPGeneratorMockRecorder
}

// MockOTPGeneratorMockRecorder is the mock recorder for MockOTPGenerator.
type MockOTPGeneratorMockRecorder struct {
	mock *MockOTPGenerator
}

// NewMockOTPGenerator creates a new mock instance.
func NewMockOTPGenerator(ctrl *gomock.Controller) *MockOTPGenerator {
	mock := &MockOTPGenerator{ctrl: ctrl}
	mock.recorder = &MockOTPGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOTPGenerator) EXPECT() *MockOTPGeneratorMockRecorder {
	return m.recorder
}

// RandomSecret mocks base method.
func (m *MockOTPGenerator) RandomSecret() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RandomSecret")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RandomSecret indicates an expected call of RandomSecret.
func (mr *MockOTPGeneratorMockRecorder) RandomSecret() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RandomSecret", reflect.TypeOf((*MockOTPGenerator)(nil).RandomSecret))
}
